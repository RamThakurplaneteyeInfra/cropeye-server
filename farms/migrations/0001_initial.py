# Generated by Django 4.2.7 on 2024-01-01 00:00

import uuid
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.contrib.gis.db.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CropType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_type', models.CharField(blank=True, max_length=100)),
                ('plantation_type', models.CharField(blank=True, choices=[('adsali', 'Adsali'), ('suru', 'Suru'), ('ratoon', 'Ratoon'), ('pre-seasonal', 'Pre-Seasonal'), ('post-seasonal', 'Post-Seasonal'), ('other', 'Other')], max_length=100)),
                ('planting_method', models.CharField(blank=True, choices=[('3_bud', '3 Bud Method'), ('2_bud', '2 Bud Method'), ('1_bud', '1 Bud Method'), ('1_bud_stip_Method', '1 Bud (stip Method)'), ('other', 'Other')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='IrrigationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('drip', 'Drip Irrigation'), ('sprinkler', 'Sprinkler Irrigation'), ('flood', 'Flood Irrigation'), ('center_pivot', 'Center Pivot Irrigation'), ('manual', 'Manual Irrigation'), ('none', 'None')], max_length=50)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SensorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('soil_moisture', 'Soil Moisture'), ('temperature', 'Temperature'), ('humidity', 'Humidity'), ('rainfall', 'Rainfall'), ('wind', 'Wind'), ('light', 'Light'), ('other', 'Other')], max_length=50)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoilType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gat_number', models.CharField(max_length=50)),
                ('plot_number', models.CharField(blank=True, max_length=50)),
                ('village', models.CharField(blank=True, max_length=100)),
                ('taluka', models.CharField(blank=True, max_length=100)),
                ('district', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, default='India', max_length=100)),
                ('pin_code', models.CharField(blank=True, max_length=6)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, db_index=True, geography=True, null=True)),
                ('boundary', django.contrib.gis.db.models.fields.PolygonField(blank=True, db_index=True, geography=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='Field officer who created this plot', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_plots', to=settings.AUTH_USER_MODEL)),
                ('farmer', models.ForeignKey(blank=True, help_text='Farmer who owns this plot', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('gat_number', 'plot_number', 'village', 'taluka', 'district')},
            },
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('address', models.TextField()),
                ('area_size', models.DecimalField(decimal_places=2, help_text='Size in acres', max_digits=10)),
                ('farm_document', models.FileField(blank=True, null=True, upload_to='farm_documents/')),
                ('plantation_date', models.DateField(blank=True, help_text='Date when crops were planted', null=True)),
                ('spacing_a', models.DecimalField(blank=True, decimal_places=2, help_text='Spacing A in meters', max_digits=8, null=True)),
                ('spacing_b', models.DecimalField(blank=True, decimal_places=2, help_text='Spacing B in meters', max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crop_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farms.croptype')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_farms', to=settings.AUTH_USER_MODEL)),
                ('farm_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farms', to=settings.AUTH_USER_MODEL)),
                ('plot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='farms', to='farms.plot')),
                ('soil_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farms.soiltype')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FarmIrrigation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True)),
                ('status', models.BooleanField(db_index=True, default=True)),
                ('motor_horsepower', models.FloatField(blank=True, null=True)),
                ('pipe_width_inches', models.FloatField(blank=True, null=True)),
                ('distance_motor_to_plot_m', models.FloatField(blank=True, null=True)),
                ('plants_per_acre', models.IntegerField(blank=True, null=True)),
                ('flow_rate_lph', models.FloatField(blank=True, null=True)),
                ('emitters_count', models.IntegerField(blank=True, null=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='irrigations', to='farms.farm')),
                ('irrigation_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farms.irrigationtype')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='FarmSensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True)),
                ('installation_date', models.DateField(default=django.utils.timezone.now)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('status', models.BooleanField(db_index=True, default=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='farms.farm')),
                ('sensor_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farms.sensortype')),
            ],
        ),
        migrations.CreateModel(
            name='FarmImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='farm_images/')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True)),
                ('capture_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='farms.farm')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farm_images', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
